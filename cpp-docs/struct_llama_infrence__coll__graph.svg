<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: LlamaInfrence Pages: 1 -->
<svg width="370pt" height="147pt"
 viewBox="0.00 0.00 370.00 147.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.node, .edge {opacity: 0.7;}
.node.selected, .edge.selected {opacity: 1;}
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="application/ecmascript" xlink:href="svg.min.js"/>
<svg id="graph" class="graph">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 143)">
<title>LlamaInfrence</title>
<!-- Node1 -->
<g id="Node000001" class="node">
<title>Node1</title>
<g id="a_Node000001"><a xlink:title="Provides an interface for inference operations on a model, such as GPT (yet any LLama....">
<polygon fill="#999999" stroke="none" points="362,-139 0,-139 0,0 362,0 362,-139"/>
<text text-anchor="start" x="150.5" y="-126.5" font-family="Helvetica,sans-Serif" font-size="10.00">LlamaInfrence</text>
<text text-anchor="start" x="4" y="-111.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="15" y="-111.5" font-family="Helvetica,sans-Serif" font-size="10.00">LlamaImpl * pImpl</text>
<text text-anchor="start" x="4" y="-96.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="15" y="-96.5" font-family="Helvetica,sans-Serif" font-size="10.00">void Echo(std::string in)</text>
<text text-anchor="start" x="4" y="-81.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="15" y="-81.5" font-family="Helvetica,sans-Serif" font-size="10.00">bool Generate(const std::string &amp;prompt)</text>
<text text-anchor="start" x="4" y="-66.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="15" y="-66.5" font-family="Helvetica,sans-Serif" font-size="10.00">std::string GetGenerated()</text>
<text text-anchor="start" x="4" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="15" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">LlamaInfrence(const LoggingContext *logging, const gpt_params &amp;cfg_params)</text>
<text text-anchor="start" x="4" y="-36.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="15" y="-36.5" font-family="Helvetica,sans-Serif" font-size="10.00">void Stop()</text>
<text text-anchor="start" x="4" y="-21.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="15" y="-21.5" font-family="Helvetica,sans-Serif" font-size="10.00">~LlamaInfrence()</text>
<text text-anchor="start" x="4" y="-6.5" font-family="Helvetica,sans-Serif" font-size="10.00">+</text>
<text text-anchor="start" x="15" y="-6.5" font-family="Helvetica,sans-Serif" font-size="10.00">static gpt_params * GetParameters(const std::string &amp;llamacpp_cmd_args)</text>
<polygon fill="#666666" stroke="#666666" points="0,-121.5 0,-121.5 362,-121.5 362,-121.5 0,-121.5"/>
<polygon fill="#666666" stroke="#666666" points="0,-106.5 0,-106.5 13,-106.5 13,-106.5 0,-106.5"/>
<polygon fill="#666666" stroke="#666666" points="13,-106.5 13,-106.5 362,-106.5 362,-106.5 13,-106.5"/>
<polygon fill="none" stroke="#666666" points="0,0 0,-139 362,-139 362,0 0,0"/>
</a>
</g>
</g>
</g>
</svg>
</svg>

<style type='text/css'>
<![CDATA[
[data-mouse-over-selected='false'] { opacity: 0.7; }
[data-mouse-over-selected='true']  { opacity: 1.0; }
]]>
</style>
<script type="application/ecmascript"><![CDATA[
document.addEventListener('DOMContentLoaded', (event) => {
  highlightEdges();
  highlightAdjacentNodes();
});
]]></script>
</svg>
